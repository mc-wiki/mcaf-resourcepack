name: Upload Releases

on:
  workflow_dispatch:
    inputs:
      channel:
        description: 'Release channel'
        required: true
        type: choice
        default: beta
        options:
          - release
          - beta
          - alpha
      name:
        description: 'Version name'
        required: false
        type: string
      changes:
        description: 'Change notes (JSON string)'
        required: false
        type: string
  schedule:
    - cron: '0 18 * 1-3,5-12 0'
    - cron: '0 18 2-7,9,12,15,20,25,30 4 *'

jobs:
  sync_and_prepare:
    runs-on: ubuntu-latest
    outputs:
      has_commits: ${{ steps.check.outputs.has_commits }}
      recent_logs: ${{ steps.check.outputs.recent_logs }}
      folders_json: ${{ steps.list_folders.outputs.folders_json }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check Recent Commits
        id: check
        run: |
          DATE=1.week.ago
          DAY=$(date +%-d)
          if [[ $(date +%-m) == 4 ]]; then
            DATE=5.days.ago
            [[ $DAY -lt 13 ]] && DATE=3.days.ago
            [[ $DAY -lt 8 ]] && DATE=1.day.ago
            [[ $DAY == 2 ]] && DATE=1.week.ago
          fi
          git log --since=$DATE --stat=200 --oneline --no-decorate > recent_logs.txt
          sed -i ':a;N;$!ba;s/\n/<br>\n/g' recent_logs.txt
          RECENT_LOGS=$(sed ':a;N;$!ba;s/\( deletions\?(-)<br>\n\)/\1\n/g' recent_logs.txt)
          echo "Recent logs: $(cat recent_logs.txt)"
          if [[ $RECENT_LOGS =~ /lang/ ]]; then
            echo "has_commits=true" >> $GITHUB_OUTPUT
          else
            echo "has_commits=false" >> $GITHUB_OUTPUT
          fi
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)  # To define the separator
          echo "recent_logs<<EOF"$'\n'"$RECENT_LOGS"$'\n'EOF >> $GITHUB_OUTPUT  # For the multi-line output

      - name: List folders
        id: list_folders
        run: |
          FOLDERS=$(ls ./resources | sort | sed '1{h;s/.*/15w14a\n1.RV-Pre1\n3D_Shareware_v1.34/;G}' | awk '!a[$0]++' | sed 's/.*/"&"/' | sed ':a;N;$!ba;s/\n/,/g')
          echo "folders_json=[$FOLDERS]" >> $GITHUB_OUTPUT

  release:
    needs: [sync_and_prepare]
    if: needs.sync_and_prepare.outputs.has_commits == true
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        folder: ${{ fromJson(needs.sync_and_prepare.outputs.folders_json) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Package Resources for ${{ matrix.folder }}
        id: package
        run: |
          cp sources/${{ matrix.folder }}/* resources/${{ matrix.folder }}/assets/minecraft/lang
          cd resources/${{ matrix.folder }}
          zip -r '../../[AFTP] ${{ matrix.folder }}.zip' ./*
          TIME=$(date +%y%m%d)
          DAY=$(date +%-d)
          CHANNEL=release
          if [[ $(date +%-m) == 4 && ${{ matrix.folder }} == $(date +%y)* ]]; then
            [[ $DAY -lt 7 ]] && CHANNEL=beta
            [[ $DAY -lt 4 ]] && CHANNEL=alpha
          fi
          IS_NEWER=false
          if [[ '${{ needs.sync_and_prepare.outputs.recent_logs }}' =~ ${{ matrix.folder }} ]]; then
            IS_NEWER=true
          fi
          echo "time=$TIME" >> $GITHUB_OUTPUT
          echo "channel=$CHANNEL" >> $GITHUB_OUTPUT
          echo "is_newer=$IS_NEWER" >> $GITHUB_OUTPUT

      - name: Upload to Modrinth
        if: steps.package.outputs.is_newer == true
        uses: cloudnode-pro/modrinth-publish@v2
        with:
          token: ${{ secrets.MODRINTH_TOKEN }}
          project: '1NAoXRE0'
          version: ${{ inputs.name || steps.package.outputs.time }}+${{ matrix.folder }}
          changelog: |
            ${{ inputs.changes && fromJson(inputs.changes) || '<!-- Add change notes here -->' }}

            Resource packs built from the latest Crowdin translations.
            - Run ID: ${{ github.run_id }}
            - Commit SHA: ${{ github.sha }}

            <details>
            <summary>Recent logs</summary>

            ${{ needs.sync_and_prepare.outputs.recent_logs }}
            </details>
          loaders: minecraft
          game-versions: ${{ matrix.folder == '3D_Shareware_v1.34' && '3D-Shareware-v1.34' || matrix.folder == '22w13oneBlockAtATime' && '22w13oneblockatatime' || matrix.folder }}
          files: '["[AFTP] ${{ matrix.folder }}.zip"]'
          channel: ${{ inputs.channel || steps.package.outputs.channel }}
